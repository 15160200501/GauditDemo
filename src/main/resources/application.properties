redis.host=localhost
redis.port=6379
redis.connectionTimeout=5000
redis.password=
redis.database=0

#使用 HikariCP 数据源
spring.datasource.type= com.zaxxer.hikari.HikariDataSource
spring.datasource.driverClassName= com.mysql.cj.jdbc.Driver
spring.datasource.url= jdbc:mysql://xxx:53306/audit_d?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&allowMultiQueries=true
spring.datasource.username= xxx
spring.datasource.password= xxx
# 最小连接数
spring.datasource.hikari.minimum-idle= 100
# 最大连接数
spring.datasource.hikari.maximum-pool-size= 10000
# 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），默认:20s
spring.datasource.hikari.idle-timeout= 20000
# 连接池名字
spring.datasource.hikari.pool-name= DatebookHikariCP
# 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms，建议设置比数据库超时时长少60秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
spring.datasource.hikari.max-lifetime= 1200000
# 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:60秒
spring.datasource.hikari.connection-timeout= 60000
spring.datasource.hikari.connection-test-query= SELECT 1
# 自动提交
spring.datasource.hikari.auto-commit=true

mybatis.mapper-locations=classpath:mapper/*.xml

#当查询数据为空时字段返回为null，不加这个查询数据为空时，字段将被隐藏
mybatis.configuration.call-setters-on-nulls=true

audit.index.prefix.env=audit-d-

#mybatisLog显示日志记录
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# 调度配置 -- 将任务等保存化到数据库
spring.quartz.job-store-type=jdbc
#spring.quartz.jdbc.initialize-schema=always
#程序结束时会等待quartz相关的内容结束
spring.quartz.wait-for-jobs-to-complete-on-shutdown=true
# 修改定时触发时间能随时生效
spring.quartz.overwrite-existing-jobs=true
# scheduler实例名  调度器实例名称
spring.quartz.properties.org.quartz.scheduler.instanceName=myScheduler
# 调度器实例编号自动生成
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
# 持久化方式配置 -- 数据保存方式为数据库持久化
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
# 数据库代理类，一般org.quartz.impl.jdbcjobstore.StdJDBCDelegate可以满足大部分数据库
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 数据表的前缀，默认QRTZ_
spring.quartz.properties.org.quartz.jobStore.tablePrefix=qrtz_
# JobDataMaps是否都为String类型
spring.quartz.properties.org.quartz.jobStore.useProperties=false
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=10000
# 是否支持集群
spring.quartz.properties.org.quartz.jobStore.isClustered=false
# 线程池相关 -- 线程池的实现类
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
# 线程池中的线程数量
spring.quartz.properties.org.quartz.threadPool.threadCount=10
# 线程优先级
spring.quartz.properties.org.quartz.threadPool.threadPriority=5
# 配置是否启动自动加载数据库内的定时任务，默认true
spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true